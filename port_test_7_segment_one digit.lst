;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 8/26/2018 9:50:23 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF04	F000			GOTO	_main
$00B6	$	GlobalIni4550allportblink:
$00B6	$0E00	    			MOVLW	0
$00B8	$6E15	    			MOVWF	_cnt+0, 0
$00BA	$0E00	    			MOVLW	0
$00BC	$6E16	    			MOVWF	_cnt+1, 0
$00BE	$0E3F	    			MOVLW	63
$00C0	$6E17	    			MOVWF	_dig+0, 0
$00C2	$0E06	    			MOVLW	6
$00C4	$6E18	    			MOVWF	_dig+1, 0
$00C6	$0E5B	    			MOVLW	91
$00C8	$6E19	    			MOVWF	_dig+2, 0
$00CA	$0E4F	    			MOVLW	79
$00CC	$6E1A	    			MOVWF	_dig+3, 0
$00CE	$0E66	    			MOVLW	102
$00D0	$6E1B	    			MOVWF	_dig+4, 0
$00D2	$0E6D	    			MOVLW	109
$00D4	$6E1C	    			MOVWF	_dig+5, 0
$00D6	$0E7D	    			MOVLW	125
$00D8	$6E1D	    			MOVWF	_dig+6, 0
$00DA	$0E07	    			MOVLW	7
$00DC	$6E1E	    			MOVWF	_dig+7, 0
$00DE	$0E7F	    			MOVLW	127
$00E0	$6E1F	    			MOVWF	_dig+8, 0
$00E2	$0E6F	    			MOVLW	111
$00E4	$6E20	    			MOVWF	_dig+9, 0
;4550allportblink.c,10 :: 			unsigned char dig[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,
$00E6	$0012	    			RETURN
$0008	$	_main:
;4550allportblink.c,14 :: 			void main()
;4550allportblink.c,17 :: 			TRISA=0;
$0008	$EC5B	F000			CALL	GlobalIni4550allportblink
$000C	$6A92	    			CLRF	TRISA, 0
;4550allportblink.c,18 :: 			TRISC=0;
$000E	$6A94	    			CLRF	TRISC, 0
;4550allportblink.c,19 :: 			TRISD=0;
$0010	$6A95	    			CLRF	TRISD, 0
;4550allportblink.c,20 :: 			TRISB=0;
$0012	$6A93	    			CLRF	TRISB, 0
;4550allportblink.c,21 :: 			LATA=0xff;
$0014	$0EFF	    			MOVLW	255
$0016	$6E89	    			MOVWF	LATA, 0
;4550allportblink.c,22 :: 			LATB=0xff;
$0018	$0EFF	    			MOVLW	255
$001A	$6E8A	    			MOVWF	LATB, 0
;4550allportblink.c,23 :: 			LATD=0xff;
$001C	$0EFF	    			MOVLW	255
$001E	$6E8C	    			MOVWF	LATD, 0
;4550allportblink.c,24 :: 			LATC=0xff;
$0020	$0EFF	    			MOVLW	255
$0022	$6E8B	    			MOVWF	LATC, 0
;4550allportblink.c,25 :: 			INTCON2=0;
$0024	$6AF1	    			CLRF	INTCON2, 0
;4550allportblink.c,26 :: 			ADCON1=0x0f;  //make all nit sigital on portb
$0026	$0E0F	    			MOVLW	15
$0028	$6EC1	    			MOVWF	ADCON1, 0
;4550allportblink.c,28 :: 			for(;;)
$002A	$	L_main_0:
;4550allportblink.c,30 :: 			delay_ms(10);
$002A	$0E1A	    			MOVLW	26
$002C	$6E0B	    			MOVWF	STACK_11, 0
$002E	$0EFF	    			MOVLW	255
$0030	$6E0A	    			MOVWF	STACK_10, 0
$0032	$2E0B	    			DECFSZ	STACK_11, F, 0
$0034	$D001	    			BRA	$+2
$0036	$D003	    			BRA	$+4
$0038	$2E0A	    			DECFSZ	STACK_10, F, 0
$003A	$D7FE	    			BRA	$-1
$003C	$D7FA	    			BRA	$-5
$003E	$0EE7	    			MOVLW	231
$0040	$6E0A	    			MOVWF	STACK_10, 0
$0042	$2E0A	    			DECFSZ	STACK_10, F, 0
$0044	$D7FE	    			BRA	$-1
$0046	$0000	    			NOP
;4550allportblink.c,31 :: 			PORTA=~PORTA;
$0048	$1E80	    			COMF	PORTA, 1, 0
;4550allportblink.c,32 :: 			PORTB=~dig[cnt];
$004A	$0E17	    			MOVLW	_dig
$004C	$2415	    			ADDWF	_cnt, 0, 0
$004E	$6EE9	    			MOVWF	FSR0L, 0
$0050	$0E00	    			MOVLW	@_dig
$0052	$2016	    			ADDWFC	_cnt+1, 0, 0
$0054	$6EEA	    			MOVWF	FSR0L+1, 0
$0056	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$005A	$1C00	    			COMF	STACK_0, 0, 0
$005C	$6E81	    			MOVWF	PORTB, 0
;4550allportblink.c,33 :: 			if(cnt==9) cnt=0;
$005E	$0E00	    			MOVLW	0
$0060	$1816	    			XORWF	_cnt+1, 0, 0
$0062	$E102	    			BNZ	L_main_4
$0064	$0E09	    			MOVLW	9
$0066	$1815	    			XORWF	_cnt, 0, 0
$0068	$	L_main_4:
$0068	$E102	    			BNZ	L_main_3
$006A	$6A15	    			CLRF	_cnt, 0
$006C	$6A16	    			CLRF	_cnt+1, 0
$006E	$	L_main_3:
;4550allportblink.c,34 :: 			PORTC=~PORTC;
$006E	$1E82	    			COMF	PORTC, 1, 0
;4550allportblink.c,35 :: 			PORTD=~PORTD;
$0070	$1E83	    			COMF	PORTD, 1, 0
;4550allportblink.c,36 :: 			delay_ms(100);
$0072	$0E02	    			MOVLW	2
$0074	$6E0C	    			MOVWF	STACK_12, 0
$0076	$0EFF	    			MOVLW	255
$0078	$6E0B	    			MOVWF	STACK_11, 0
$007A	$0EFF	    			MOVLW	255
$007C	$6E0A	    			MOVWF	STACK_10, 0
$007E	$2E0C	    			DECFSZ	STACK_12, F, 0
$0080	$D001	    			BRA	$+2
$0082	$D007	    			BRA	$+8
$0084	$2E0B	    			DECFSZ	STACK_11, F, 0
$0086	$D001	    			BRA	$+2
$0088	$D003	    			BRA	$+4
$008A	$2E0A	    			DECFSZ	STACK_10, F, 0
$008C	$D7FE	    			BRA	$-1
$008E	$D7FA	    			BRA	$-5
$0090	$D7F6	    			BRA	$-9
$0092	$0E06	    			MOVLW	6
$0094	$6E0B	    			MOVWF	STACK_11, 0
$0096	$0EFF	    			MOVLW	255
$0098	$6E0A	    			MOVWF	STACK_10, 0
$009A	$2E0B	    			DECFSZ	STACK_11, F, 0
$009C	$D001	    			BRA	$+2
$009E	$D003	    			BRA	$+4
$00A0	$2E0A	    			DECFSZ	STACK_10, F, 0
$00A2	$D7FE	    			BRA	$-1
$00A4	$D7FA	    			BRA	$-5
$00A6	$0E0A	    			MOVLW	10
$00A8	$6E0A	    			MOVWF	STACK_10, 0
$00AA	$2E0A	    			DECFSZ	STACK_10, F, 0
$00AC	$D7FE	    			BRA	$-1
;4550allportblink.c,37 :: 			cnt=cnt+1;
$00AE	$4A15	    			INFSNZ	_cnt, 1, 0
$00B0	$2A16	    			INCF	_cnt+1, 1, 0
;4550allportblink.c,40 :: 			}
$00B2	$	L_main_2:
$00B2	$D7BB	    			BRA	L_main_0
;4550allportblink.c,41 :: 			}
$00B4	$D7FF	    			BRA	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0008		main
$00B6		GlobalIni4550allportblink


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0008		_main:
$002A		L_main_0:
$0068		L_main_4:
$006E		L_main_3:
$00B2		L_main_2:
$00B6		GlobalIni4550allportblink:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		STACK_0
$0001		STACK_1
$0002		STACK_2
$0003		STACK_3
$0004		STACK_4
$0005		STACK_5
$0006		STACK_6
$0007		STACK_7
$0008		STACK_8
$0009		STACK_9
$000A		STACK_10
$000B		STACK_11
$000C		STACK_12
$000D		STACK_13
$000E		STACK_14
$000F		STACK_15
$0010		STACK_16
$0011		STACK_17
$0012		STACK_18
$0013		STACK_19
$0014		STACK_20
$0015		_cnt
$0017		_dig
$0F80		PORTA
$0F81		PORTB
$0F82		PORTC
$0F83		PORTD
$0F89		LATA
$0F8A		LATB
$0F8B		LATC
$0F8C		LATD
$0F92		TRISA
$0F93		TRISB
$0F94		TRISC
$0F95		TRISD
$0FC1		ADCON1
$0FD8		STATUS
$0FD9		FSR2L
$0FDA		FSR2H
$0FDB		PLUSW2
$0FDC		PREINC2
$0FDD		POSTDEC2
$0FDE		POSTINC2
$0FDF		INDF2
$0FE0		BSR
$0FE1		FSR1L
$0FE2		FSR1H
$0FE3		PLUSW1
$0FE4		PREINC1
$0FE5		POSTDEC1
$0FE6		POSTINC1
$0FE7		INDF1
$0FE8		WREG
$0FE9		FSR0L
$0FEA		FSR0H
$0FEB		PLUSW0
$0FEC		PREINC0
$0FED		POSTDEC0
$0FEE		POSTINC0
$0FEF		INDF0
$0FF1		INTCON2
$0FF3		PRODL
$0FF4		PRODH
$0FF5		TABLAT
$0FF6		TBLPTRL
$0FF7		TBLPTRH
$0FF8		TBLPTRU
$0FF9		PCL
$0FFA		PCLATH
$0FFB		PCLATU
$0FFD		TOSL
$0FFE		TOSH
$0FFF		TOSU


